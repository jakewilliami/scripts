#! /bin/bash
#Script for git log!  REQUIRES `PERL`.


LOGNUMBER=$([[ -z "$1" ]] && echo "10")
COMMIT_NUMBER_TODAY=$(git rev-list --count --since=yesterday --before=today HEAD)
BRANCH=$(git rev-parse --abbrev-ref HEAD)
REPO_NAME=$(basename `git rev-parse --show-toplevel`)
HELP="\033[1;33mNot a valid option.  Use -h for help.\033[0;38m"

display_help() {
    echo -e "\033[1;38mUsage: [option...]\033[0;38m"
    echo
    echo -e "\033[1;38;5;26m   -c           \033[1;33mShows present commit count on working branch.\033[0;38m"
    echo -e "\033[1;38;5;26m   -s           \033[1;33mShows git status minimally.\033[0;38m"
    echo -e "\033[1;38;5;26m   -i           \033[1;33mShows currently open issues in working branch.\033[0;38m"
    echo -e "\033[1;38;5;26m   -h           \033[1;33mShows help (present output).\033[0;38m"
    exit $?
}


while getopts ":csih" OPTION; do
        case $OPTION in
                s)
                    git status --short --branch   
                    ;;

                c)
                    echo -e "\033[1;38;5;2mYou have made $COMMIT_NUMBER_TODAY commits to $REPO_NAME/$BRANCH in the past 24 hours.\033[0;38m"
                    ;;
                i)
                    ghi list
                    ;;
                h)
                    display_help
                    ;;
                \?)
                    echo -e "${HELP}" && exit $?
                    ;;
        esac
done


if [[ -z $1 ]] || [[ $1 =~ ^[-+]?[0-9]+$ ]]
then
    git log --color --no-merges --pretty=format:\
"%C(bold yellow)%h%Creset -%C(bold green)%d%Creset %s %C(bold red)(%cr)%Creset %C(bold blue)<%an>%Creset" \
--abbrev-commit -$1$LOGNUMBER | perl -pe \
' if (/<([^>]*)>/)
    {
    if ( $1 eq "jakewilliami"  ||  $1 eq "Jake Ireland" )
        { s/<$1>/\e[0m\e[36m$&\e[39m\e[0m/; }
    else 
        { s/<$1>/\e[1m\e[34m$&\e[39m\e[0m/; } 
} '
fi
