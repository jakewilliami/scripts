#! /bin/bash

GIT_LOCATION="/Users/jakeireland/Documents/my_macros/"
LOCAL_DIR="${GIT_LOCATION}../../.config/texstudio/templates/user/"
GIT_DIR="${GIT_LOCATION}tea_templates/"
BASH_DIR="/Users/jakeireland/bin/scripts/bash/"


#Clean up
clean-exit() {
    [[ -f ${BASH_DIR}/textcolours.txt ]] && \
    rm /Users/jakeireland/bin/scripts/bash/textcolours.txt
    exit $?
}


# Colours
jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' ${BASH_DIR}/textcolours.json | sed -e 's/=\([^" >][^ >]*\)/="\1"/g' >> ${BASH_DIR}/textcolours.txt && source ${BASH_DIR}/textcolours.txt


display_help() {
    echo -e "${BWHITE}Usage: mymacros [option... | file name...]${BWHITE}"
    echo
    echo -e "${ITBWHITE}The present script will open a specified file in Brackets.app.  If the file is not found in the current directory, it will look for it in \`~/bin/scripts/bash\`.${NORM}"
    echo
    echo -e "${BBLUE}\t -h \t${BYELLOW}Shows help (present output).${NORM}"
    clean-exit
}


while getopts "h" OPTION; do
    case $OPTION in
        h)
            display_help
            ;; 
    esac
done


#Define local variables
REPLACING_TEX="${BYELLOW}Replacing outdated .tex file(s) in git repository.${NORM}"
COMPLETED_TEX="${BGREEN}.tex transfer complete.${NORM}"
REPLACING_JSON="${BYELLOW}Replacing outdated .json file(s) in git repository.${NORM}"
COMPLETED_JSON="${BGREEN}.json transfer complete.${NORM}"
ALL_GOOD_TEX="${BGREEN}Your git repository's templates directory's .tex files are up to date with your local templates directory.${NORM}"
ALL_GOOD_JSON="${BGREEN}Your git repository's templates directory's .json files are up to date with your local templates directory.${NORM}"


DIFFT=false
DIFFJ=false

#Begin script

cd "${GIT_LOCATION}" || clean-exit

#check tex files
for t in "${LOCAL_DIR}"/*.tex; do
   if ! cmp -s "$t" "${GIT_DIR}"/$(basename $t)
   then
        DIFFT=true
        echo -e "${REPLACING_TEX}" 
        cp -fr "$t" "${GIT_DIR}/" && echo -e ${COMPLETED_TEX}
    fi
done

[ $DIFFT = false ] && \
echo -e "${ALL_GOOD_TEX}"


for j in "${LOCAL_DIR}"/*.json; do
   if ! cmp -s "$j" "${GIT_DIR}"/$(basename $j)
   then
        DIFFJ=true
        echo -e "${REPLACING_JSON}" 
        cp -fr "$j" "${GIT_DIR}/" && echo -e ${COMPLETED_JSON}
    fi
done


[ "$DIFFJ" = "false" ] && \
echo -e "${ALL_GOOD_JSON}"


#clean up
[[ -f ${BASH_DIR}/textcolours.txt ]] && \
rm /Users/jakeireland/bin/scripts/bash/textcolours.txt
exec bash