#! /bin/bash


BASH_DIR="${HOME}/bin/scripts/bash/"

# Ensure jq is installed
source ${BASH_DIR}/dependencies/jq-dep.sh

# Colours
source ${BASH_DIR}/colours/json-colour-parser.sh

# Brew Install function
source ${BASH_DIR}/dependencies/brew-install-dep.sh

# Satisfy Dependencies
brew_install "${SATISFYING_DEPS}" ruby rbenv ruby-build && \
echo -e "${DEPS_SATISFIED}"

# Gem Install function
source ${BASH_DIR}/dependencies/gem-install-dep.sh

# Install dependencies
gem_install iStats

# Help
display_help() {
    echo -e "${BWHITE}Usage: cstatus [option...]${NORM}"
    echo
    echo -e "${ITWHITE}The present script will tell the user computer information given an option.${NORM}"
    echo
    echo -e "${BBLUE}\t -u | --cpu-util \t${BYELLOW}Supresses ${ULINE}${BBLUE}l${BYELLOW}isting${NORM}${BYELLOW} directory content${NORM}"
    echo -e "${BBLUE}\t -g | --geo-ip \t\t${BYELLOW}Shows ${ULINE}${BBLUE}g${BYELLOW}eo-location${NORM}${BYELLOW} information based on  my (current) ip address.${BNORM}"
    echo -e "${BBLUE}\t -h | --help \t\t${BYELLOW}Shows ${ULINE}${BBLUE}h${BYELLOW}elp${NORM} ${BYELLOW}(present output).${NORM}"
    clean-exit
}


opt_err() {
    HELP="${BYELLOW}Invalid option.  Use option -h for help.${NORM}"
    echo -e "${HELP}"
	clean-exit
}


opt_err_none() { #Invalid option (getopts already reported the illegal option)
    HELP="${BYELLOW}You must have at least one arguments.  Use -h for help.${BNORM}"
    echo -e "${HELP}"
	clean-exit
}


cpu_utilisation() {
    ps -A -o %cpu | \
    awk '{s+=$1} END {print s "%"}'
}


ip_specs() {
    output_type="${1}"  # Can interpret json, xml, and csv
    curl -s "https://freegeoip.app/${output_type}/${2}" | jq .
}


my_ip() {
    myip=$(curl -s http://checkip.dyndns.org/ | sed 's/[a-zA-Z<>/ :]//g')  # Get ip address
    grepped_ip=${myip%$'\r'}  # Remove end of line character from ip address
    ip_specs "json" "${grepped_ip}"
}


while getopts ":-:ugh" OPTION; do
        case $OPTION in
                -)
                    case $OPTARG in
                        geo-ip)
                            my_ip ;;
                        cpu-util)
                            cpu_utilisation ;;
                        help)
                            display_help ;;
                        *)
                            opt_err ;;
                    esac ;;
                g)
                    my_ip ;;
                u)
                    cpu_utilisation ;;
                h)  
                    display_help ;;
                *)
                    opt_err ;;
        esac
done


if [[ -z $1 ]]
then
    opt_err_none
fi


# Clean up
clean-exit
