#! /bin/bash

# define bash directory
BASH_DIR="${HOME}/scripts/bash/"

# source required scripts
source ${BASH_DIR}/dependencies/source-dependencies.sh

# get kernel- and os-specific dependencies
case $KERNEL in
    Darwin)
        is-library-then-install "${BREWCASK}"
        is-app-then-install "${ATOM}"
        ;;
    Linux)
        if ! command -v atom > /dev/null 2>&1
        then
            case $(getconf LONG_BIT) in
                64)
                    case $OS in
                        debian)
                            cd "${HOME}"/Downloads/
                            wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
                            sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list' && \
                            sudo apt-get update && \
                            sudo apt-get install atom || echo -e "${ERROR_OCCURRED}"
                            ;;
                        arch)
                            aur_install "${ATOM}" 'https://aur.archlinux.org/cgit/aur.git/snapshot/atom-editor-git.tar.gz'
                            ;;
                    esac
                    ;;
                32)
                    echo -e "${BYELLOW}Sorry, you need to manually download Atom on 32-bit systems.${NORM}"
                    clean-exit
                    ;;
            esac
        fi
        ;;
esac


display_help() {
    help_start 'oinb [option... | file name...]' 'The present script will open a specified file in Atom.app.  If the file is not found in the current directory, it will look for it in `~/scripts/bash`.'
    help_help '2'
    clean-exit
}


while getopts ":-:h" OPTION; do
    case $OPTION in
        -)
            case $OPTARG in
                help)
                    display_help ;;
                *)
                    opt_err ;;
            esac ;;
        h)
            display_help ;; 
        *)
          opt_err ;;  
    esac
done


# Open file(s)
for f in $@
do
    if [[ $KERNEL == "Linux" ]]
    then
        if [[ -f $f ]] # Checks to see if file exists in current working directory
        then
            atom $f
        else
            atom "${HOME}/scripts/bash/${f}"
        fi
    elif [[ $KERNEL == "Darwin" ]]
    then
        if [[ -f $f ]] # Checks to see if file exists in current working directory
        then
            open -a Atom.app $f
        else
            open -a Atom.app "${HOME}/scripts/bash/${f}"
        fi
    fi
done


clean-exit
