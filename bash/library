#! /bin/bash
#Future: `brew install yarn && yarn global add taskbook`?

# Define bash directory
BASH_DIR="${HOME}/scripts/bash/"
LIBRARY_FILE="${HOME}/Desktop/library.csv"

if [[ $(hostname) == "jake-mbp2017.local" ]] && [[ $(whoami) == "jakeireland" ]]
then
    # Colours
    source ${BASH_DIR}/colours/json-colour-parser.sh
else
    # Ensure jq is installed
    source ${BASH_DIR}/dependencies/jq-dep.sh && \
    source ${BASH_DIR}/colours/json-colour-parser.sh
fi

# Help
display_help() { #Displays help
    echo -e "${BWHITE}Usage: gl [option...]${NORM}"
    echo
    echo -e "${ITWHITE}The present script will parse and analyse a csv file of my library.${NORM}"
    echo
    echo -e "${BBLUE}\t -e | --entries \t${BYELLOW}Prints number of ${ULINE}${BBLUE}e${BYELLOW}ntries${NORM}${BYELLOW} in library.${NORM}"
    echo -e "${BBLUE}\t -t | --term-search \t${BYELLOW}Prints number of books found with some search ${ULINE}${BBLUE}t${BYELLOW}erm${NORM}${BYELLOW}.${NORM}"
    echo -e "${BBLUE}\t -h | --help \t\t${BYELLOW}Shows ${ULINE}${BBLUE}h${BYELLOW}elp${NORM}${BYELLOW} (present output).${NORM}"  # fold -w10
    clean-exit
}


opt_err() { #Invalid option (getopts already reported the illegal option)
    HELP="${BYELLOW}Not a valid option.  Use -h for help.${NORM}"
    echo -e "${HELP}"
	clean-exit
}


opt_err_none() { #Invalid option (getopts already reported the illegal option)
    HELP="${BYELLOW}You must have at least one option.  Use -h for help.${NORM}"
    echo -e "${HELP}"
	clean-exit
}


entries() {
    LINES_IN_LIB=$(cat ${LIBRARY_FILE} | wc -l | awk '{$1=$1;print}')
    
    echo -e "${BWHITE}Your library consists of ${LINES_IN_LIB} books!${NORM}"
    clean-exit
}


TERM_SEARCHED_FOR="${2}"
how-many-terms() {
    [[ -z "${TERM_SEARCHED_FOR}" ]] && echo -e "${BYELLOW}You must have at least one argument using this option (a search term).${norm}" && clean-exit
    TERMS_COUNT=$(cat ${LIBRARY_FILE} | grep -i ${TERM_SEARCHED_FOR} | wc -l | awk '{$1=$1;print}' )
    
    echo -e "${BWHITE}Your library contains ${TERMS_COUNT} books matching your term \"${TERM_SEARCHED_FOR}\"!${NORM}"
}


# Options
while getopts ":-:eth" OPTION
do
        case $OPTION in
                -)  #Long options for bash (without GNU)
                    case $OPTARG in
                        term-search)
                            how-many-terms 1 ;;
                        entries)
                            entires ;;
                        help)
                            display_help ;;
                        *)
                            opt_err ;;
                    esac ;;
                e)
                    entries ;;
                t)
                    how-many-terms 1 ;;
                h)  
                    display_help ;;
                *)  
                    opt_err ;;
        esac
done


#if no arguments
[[ -z $1 ]] && opt_err_none && clean-exit


# Clean up
clean-exit