#! /bin/bash

trap "exit" INT

# Define bash directory
BASH_DIR="$(realpath $(dirname $0))"
#LIBRARY_FILE="${HOME}/Desktop/library.csv"
LIBRARY_FILE="/Volumes/NO NAME/my-data/library/library.csv"

# define bash directory
BASH_DIR="${HOME}/scripts/bash/"

# Immediately exits script if nothing is passed to it
if [[ -z "${@}" ]]
then
    HELP="\033[1;33m You must have at least one argument.  Use -h for help. \033[0;38m"
    echo -e "${HELP}"
    exit $?
fi

# source required scripts
source ${BASH_DIR}/dependencies/source-dependencies.sh

# Help
display_help() { #Displays help
    help_start 'gl [option...]' 'The present script will parse and analyse a csv file of my library.'
    help_commands '-e' '--entries' '2' 'Prints number of' 'e' 'ntries' 'in library.'
    help_commands '-t' '--term-serch' '1' 'Prints number of books found with some search' 't' 'erm' '\b.'
    help_help '2'
    clean-exit
}


entries() {
    LINES_IN_LIB=$(cat ${LIBRARY_FILE} | wc -l | awk '{$1=$1;print}')
    
    echo -e "${BWHITE}Your library consists of ${LINES_IN_LIB} books!${NORM}"
    clean-exit
}


TERM_SEARCHED_FOR="${2}"
how-many-terms() {
    [[ -z "${TERM_SEARCHED_FOR}" ]] && echo -e "${BYELLOW}You must have at least one argument using this option (a search term).${norm}" && clean-exit
    TERMS_COUNT=$(cat ${LIBRARY_FILE} | grep -i ${TERM_SEARCHED_FOR} | wc -l | awk '{$1=$1;print}' )
    
    echo -e "${BWHITE}Your library contains ${TERMS_COUNT} books matching your term \"${TERM_SEARCHED_FOR}\"!${NORM}"
}


# Options
while getopts ":-:eth" OPTION
do
        case $OPTION in
                -)  #Long options for bash (without GNU)
                    case $OPTARG in
                        term-search)
                            how-many-terms 1 ;;
                        entries)
                            entires ;;
                        help)
                            display_help ;;
                        *)
                            opt_err ;;
                    esac ;;
                e)
                    entries ;;
                t)
                    how-many-terms 1 ;;
                h)  
                    display_help ;;
                *)  
                    opt_err ;;
        esac
done


#if no arguments
[[ -z $1 ]] && opt_err_none


# Clean up
clean-exit
